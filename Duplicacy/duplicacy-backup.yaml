version: "3.8"

services:
  duplicacy:
    image: saspus/duplicacy-web:latest
    environment:
      # Basic Configuration
      - TZ=Australia/Adelaide
      - PUID=1000
      - PGID=1000
      
      # Duplicacy Web UI Configuration
      - DWE_MACHINE_ID=${MACHINE_ID:-dokploy-cluster}
      - DWE_LISTEN_IP=0.0.0.0
      - DWE_LISTEN_PORT=3875
      
      # Optional: Set admin password (if not set, will use default)
      - DWE_PASSWORD=${ADMIN_PASSWORD:-}
      
      # Storage Backend Configuration (choose one)
      # For local storage (NFS mount)
      - STORAGE_TYPE=${STORAGE_TYPE:-local}
      
      # For cloud storage (uncomment and configure as needed)
      # AWS S3
      # - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      # - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # - AWS_DEFAULT_REGION=${AWS_REGION:-us-east-1}
      
      # Google Cloud Storage
      # - GOOGLE_APPLICATION_CREDENTIALS=/config/gcs-key.json
      
      # Azure Blob Storage
      # - AZURE_STORAGE_ACCOUNT=${AZURE_STORAGE_ACCOUNT}
      # - AZURE_STORAGE_KEY=${AZURE_STORAGE_KEY}
      
      # Backblaze B2
      # - B2_ACCOUNT_ID=${B2_ACCOUNT_ID}
      # - B2_ACCOUNT_KEY=${B2_ACCOUNT_KEY}
      
      # SFTP
      # - SFTP_HOST=${SFTP_HOST}
      # - SFTP_USER=${SFTP_USER}
      # - SFTP_PASSWORD=${SFTP_PASSWORD}
      # - SFTP_PORT=${SFTP_PORT:-22}
      
    volumes:
      # Duplicacy configuration and cache
      - /srv/appdata/duplicacy/config:/config
      - /srv/appdata/duplicacy/cache:/cache
      - /srv/appdata/duplicacy/logs:/logs
      
      # Local backup storage (if using local storage)
      - /srv/backups/duplicacy:/storage
      
      # Data to backup - mount all your important app data
      - /srv/appdata:/data/appdata:ro
      - /srv/media:/data/media:ro
      
      # Optional: Mount additional directories to backup
      # - /srv/docker-configs:/data/docker-configs:ro
      # - /home:/data/home:ro
      
      # For cloud storage credentials (if needed)
      # - /srv/appdata/duplicacy/credentials:/credentials:ro
      
    networks:
      - dokploy-network
      
    deploy:
      replicas: 1
      placement:
        constraints:
          # Run on manager node for consistency
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.duplicacy.rule=Host(`duplicacy.cooked.beer`)"
        - "traefik.http.routers.duplicacy.entrypoints=web"
        - "traefik.http.routers.duplicacy.tls=false"
        - "traefik.http.services.duplicacy.loadbalancer.server.port=3875"
        - "traefik.docker.network=dokploy-network"
        # Add monitoring labels
        - "diun.enable=true"
        - "update-monitor=true"
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3

  # Optional: Duplicacy CLI container for advanced operations
  duplicacy-cli:
    image: gilbertchen/duplicacy:latest
    environment:
      - TZ=Australia/Adelaide
      - PUID=1000
      - PGID=1000
    volumes:
      # Same volumes as web UI for consistency
      - /srv/appdata/duplicacy/config:/config
      - /srv/appdata/duplicacy/cache:/cache
      - /srv/backups/duplicacy:/storage
      - /srv/appdata:/data/appdata:ro
      - /srv/media:/data/media:ro
    networks:
      - dokploy-network
    deploy:
      replicas: 0  # Start at 0, scale up when needed
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
    # Override entrypoint to keep container running
    entrypoint: ["tail", "-f", "/dev/null"]

networks:
  dokploy-network:
    external: true

# Note: Volumes are handled by NFS mounts, no need to define them here
