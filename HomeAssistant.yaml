version: "3.8"

services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    environment:
      - TZ=Australia/Adelaide
      - PUID=1000
      - PGID=1000
    volumes:
      - /srv/appdata/homeassistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      # Uncomment if you need access to USB devices (Zigbee, Z-Wave, etc.)
      # - /dev/ttyUSB0:/dev/ttyUSB0
      # - /dev/ttyACM0:/dev/ttyACM0
    networks:
      - dokploy-network
    # Uncomment if you need host networking for device discovery
    # network_mode: host
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.homeassistant.rule=Host(`homeassistant.cooked.beer`)"
        - "traefik.http.routers.homeassistant.entrypoints=web"
        - "traefik.http.routers.homeassistant.tls=false"
        - "traefik.http.services.homeassistant.loadbalancer.server.port=8123"
        - "traefik.docker.network=dokploy-network"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      placement:
        constraints:
          # Uncomment if you want to pin to a specific node for USB device access
          # - node.hostname == your-node-name
          - node.role == worker
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: MQTT Broker (Mosquitto) for IoT device communication
  mosquitto:
    image: eclipse-mosquitto:latest
    volumes:
      - /srv/appdata/homeassistant/mosquitto/config:/mosquitto/config
      - /srv/appdata/homeassistant/mosquitto/data:/mosquitto/data
      - /srv/appdata/homeassistant/mosquitto/log:/mosquitto/log
    networks:
      - dokploy-network
    ports:
      - "1883:1883"
      - "9001:9001"
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.mosquitto.rule=Host(`mqtt.cooked.beer`)"
        - "traefik.http.routers.mosquitto.entrypoints=web"
        - "traefik.http.routers.mosquitto.tls=false"
        - "traefik.http.services.mosquitto.loadbalancer.server.port=9001"
        - "traefik.docker.network=dokploy-network"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Node-RED for automation flows
  nodered:
    image: nodered/node-red:latest
    environment:
      - TZ=Australia/Adelaide
    volumes:
      - /srv/appdata/homeassistant/nodered:/data
    networks:
      - dokploy-network
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nodered.rule=Host(`nodered.cooked.beer`)"
        - "traefik.http.routers.nodered.entrypoints=web"
        - "traefik.http.routers.nodered.tls=false"
        - "traefik.http.services.nodered.loadbalancer.server.port=1880"
        - "traefik.docker.network=dokploy-network"
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1880/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  dokploy-network:
    external: true
