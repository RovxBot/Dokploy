version: "3.8"

services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    network_mode: host
    environment:
      - TZ=Australia/Adelaide
    volumes:
      - ha_config_v1:/config
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == metal4
      restart_policy:
        condition: on-failure
      update_config:
        order: stop-first
      rollback_config:
        order: stop-first
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8123/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  ha-edge:
    image: nginx:alpine
    networks:
      - dokploy-network
    environment:
      # Override in Dokploy if you like; this is the fallback
      - HA_UPSTREAM=192.168.1.194:8123
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=dokploy-network"
        - "traefik.http.routers.ha.rule=Host(`assistant.cooked.beer`)"
        - "traefik.http.routers.ha.entrypoints=web"
        - "traefik.http.routers.ha.tls=false"
        - "traefik.http.services.ha.loadbalancer.server.port=8080"
    command:
      - /bin/sh
      - -lc
      - |
        # Debug what we're starting with
        echo "DEBUG: Initial HA_UPSTREAM value: '${HA_UPSTREAM}'"

        # Just hardcode the fallback since variable assignment isn't working
        echo "DEBUG: Using hardcoded fallback"

        # Build nginx config with hardcoded upstream
        echo "upstream homeassistant {" > /etc/nginx/conf.d/default.conf
        if [ -z "$HA_UPSTREAM" ]; then
          echo "  server 192.168.1.194:8123;" >> /etc/nginx/conf.d/default.conf
          echo "Using hardcoded upstream: 192.168.1.194:8123"
        else
          echo "  server $HA_UPSTREAM;" >> /etc/nginx/conf.d/default.conf
          echo "Using HA_UPSTREAM: $HA_UPSTREAM"
        fi
        echo "}" >> /etc/nginx/conf.d/default.conf
        echo "" >> /etc/nginx/conf.d/default.conf

        echo "server {" >> /etc/nginx/conf.d/default.conf
        echo "  listen 8080;" >> /etc/nginx/conf.d/default.conf
        echo "" >> /etc/nginx/conf.d/default.conf
        echo "  location / {" >> /etc/nginx/conf.d/default.conf
        echo "    proxy_pass http://homeassistant;" >> /etc/nginx/conf.d/default.conf
        echo "    proxy_http_version 1.1;" >> /etc/nginx/conf.d/default.conf
        echo "" >> /etc/nginx/conf.d/default.conf
        echo "    # Preserve client info" >> /etc/nginx/conf.d/default.conf
        echo '    proxy_set_header Host $host;' >> /etc/nginx/conf.d/default.conf
        echo '    proxy_set_header X-Real-IP $remote_addr;' >> /etc/nginx/conf.d/default.conf
        echo '    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;' >> /etc/nginx/conf.d/default.conf
        echo '    proxy_set_header X-Forwarded-Proto $scheme;' >> /etc/nginx/conf.d/default.conf
        echo "" >> /etc/nginx/conf.d/default.conf
        echo "    # WebSocket headers" >> /etc/nginx/conf.d/default.conf
        echo '    proxy_set_header Upgrade $http_upgrade;' >> /etc/nginx/conf.d/default.conf
        echo "    proxy_set_header Connection \"upgrade\";" >> /etc/nginx/conf.d/default.conf
        echo "" >> /etc/nginx/conf.d/default.conf
        echo "    proxy_read_timeout 3600s;" >> /etc/nginx/conf.d/default.conf
        echo "    proxy_send_timeout 3600s;" >> /etc/nginx/conf.d/default.conf
        echo "  }" >> /etc/nginx/conf.d/default.conf
        echo "}" >> /etc/nginx/conf.d/default.conf

        echo "Generated nginx config:"
        cat /etc/nginx/conf.d/default.conf

        exec nginx -g 'daemon off;'

volumes:
  ha_config_v1:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.184,nfsvers=4.1,rw
      device: :/export/appdata/homeassistant/config

networks:
  dokploy-network:
    external: true
