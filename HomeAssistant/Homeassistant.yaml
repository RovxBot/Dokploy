version: "3.8"

services:
  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    network_mode: host                  # <- host net for discovery & 8123 on the node
    environment:
      - TZ=Australia/Adelaide
    volumes:
      - ha_config_v1:/config
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.hostname == metal4
      restart_policy:
        condition: on-failure
      update_config:
        order: stop-first
      rollback_config:
        order: stop-first
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8123/ >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # leaves your proxy as-is
  ha-nginx-template-creator:
    image: alpine:latest
    volumes:
      - ha-nginx-template:/templates
    command:
      - /bin/sh
      - -c
      - |
        cat > /templates/default.conf.template << 'EOF'
        upstream homeassistant {
          server ${HA_UPSTREAM};
        }

        server {
          listen 8080;

          location / {
            proxy_pass http://homeassistant;
            proxy_http_version 1.1;

            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;

            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
          }
        }
        EOF
        echo "Template created successfully"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  ha-edge:
    image: nginx:alpine
    networks:
      - dokploy-network
    environment:
      - HA_UPSTREAM=192.168.1.194:8123     # set to metal4â€™s LAN IP
    volumes:
      - ha-nginx-template:/etc/nginx/templates:ro
    depends_on:
      - ha-nginx-template-creator
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=dokploy-network"
        - "traefik.http.routers.ha.rule=Host(`assistant.cooked.beer`)"
        - "traefik.http.routers.ha.entrypoints=web"
        - "traefik.http.routers.ha.tls=false"
        - "traefik.http.services.ha.loadbalancer.server.port=8080"

volumes:
  ha_config_v1:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.184,nfsvers=4.1,rw
      device: :/export/appdata/homeassistant/config

  ha-nginx-template:
    driver: local

networks:
  dokploy-network:
    external: true
