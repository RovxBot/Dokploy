version: "3.8"

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    environment:
      - UPLOAD_LOCATION=/media/plex/images        # inside-container path
    volumes:
      - plex_media_v1:/media/plex                 # Synology share root mounted here
      - /etc/localtime:/etc/localtime:ro
      - immich_uploads_v1:/usr/src/app/upload   # mount Synology /images here (Immich expects this)
    env_file:
      - .env
    depends_on:
      - redis
      - database
    networks:
      - dokploy-network
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.immich.rule=Host(`immich.cooked.beer`)"
        - "traefik.http.routers.immich.entrypoints=web"
        - "traefik.http.routers.immich.tls=false"
        - "traefik.http.services.immich.loadbalancer.server.port=2283"
        - "traefik.docker.network=dokploy-network"
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2283/server-info/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    volumes:
      - immich_model_cache_v1:/cache               # Rockstor NFS cache
    env_file:
      - .env
    networks:
      - dokploy-network
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      disable: false

  redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:facc1d2c3462975c34e10fccb167bfa92b0e0dbd992fc282c29a61c3243afb11
    networks:
      dokploy-network:
        aliases:
          - redis
    deploy:
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  database:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:5f6a838e4e44c8e0e019d0ebfe3ee8952b69afc2809b2c25f7b0119641978e91
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - immich_db_local:/var/lib/postgresql/data    # bind to metal2 local path
    shm_size: 128mb
    networks:
      - dokploy-network
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.immichdb == 1               # pin DB to metal2

volumes:
  immich_uploads_v1:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.154,vers=3,rw
      device: ":/volume1/Plex Media/images"

  # Rockstor model cache
  immich_model_cache_v1:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.184,nfsvers=4.1,rw
      device: :/export/appdata/immich/model-cache

  # Synology share root (weâ€™ll use /media/plex/images inside container)
  plex_media_v1:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.1.154,vers=3,rw
      device: ":/volume1/Plex Media"

  # Local bind on metal2 for Postgres data
  immich_db_local:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /srv/appdata/immich/postgres

networks:
  dokploy-network:
    external: true
