services:

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml:ro
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    networks:
      - monitor
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - alertmanager_data:/data
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    networks:
      - monitor
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 512M

  prometheus-msteams:
    image: bzon/prometheus-msteams
    environment:
      - TEAMS_INCOMING_WEBHOOK_URL=${TEAMS_INCOMING_WEBHOOK_URL}
    networks:
      - monitor
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.25'
          memory: 512M

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    ports:
      - "3100:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitor
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 512M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`cluster.cooked.beer`)"
        - "traefik.http.routers.grafana.entrypoints=websecure"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.tls.certresolver=myresolver"

  node-exporter:
    image: prom/node-exporter:latest
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitor
    deploy:
      mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitor
    deploy:
      mode: global

  loki:
    image: grafana/loki:2.9.4
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
    networks:
      - monitor
    deploy:
      placement:
        constraints: [node.role == manager]
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

configs:
  prometheus_config:
    file: ./prometheus/prometheus.yml

networks:
  monitor:
    driver: overlay
