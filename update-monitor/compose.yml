version: "3.8"

services:
  # Update checker service that runs weekly
  update-checker:
    image: containrrr/shepherd
    environment:
      TZ: 'Australia/Adelaide'
      # Only check for updates, don't update automatically
      RUN_ONCE_AND_EXIT: "true"
      SLEEP_TIME: "5m"
      # Notification settings
      NOTIFICATION_TYPE: "webhook"
      WEBHOOK_URL: "${WEBHOOK_URL}"
      WEBHOOK_TEMPLATE: |
        {
          "text": "üîÑ **Docker Update Report - {{.Date}}**\n\n{{range .Services}}üì¶ **{{.Name}}**\n   Current: {{.CurrentImage}}\n   Available: {{.LatestImage}}\n   Status: {{if .UpdateAvailable}}‚ö†Ô∏è Update Available{{else}}‚úÖ Up to date{{end}}\n\n{{end}}",
          "username": "Update Monitor",
          "icon_emoji": ":docker:"
        }
      # Email notifications (optional)
      NOTIFICATION_EMAIL_FROM: "${EMAIL_FROM}"
      NOTIFICATION_EMAIL_TO: "${EMAIL_TO}"
      NOTIFICATION_EMAIL_SERVER_HOST: "${SMTP_HOST}"
      NOTIFICATION_EMAIL_SERVER_PORT: "${SMTP_PORT}"
      NOTIFICATION_EMAIL_USERNAME: "${SMTP_USER}"
      NOTIFICATION_EMAIL_PASSWORD: "${SMTP_PASS}"
      # Filter services to monitor
      FILTER_SERVICES: "label=update-monitor=true"
      # Don't actually update, just report
      WITH_REGISTRY_AUTH: "true"
      WITH_INSECURE_REGISTRY: "false"
      WITH_NO_RESOLVE_IMAGE: "false"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - dokploy-network
    deploy:
      replicas: 0
      restart_policy:
        condition: none
      labels:
        - swarm.cronjob.enable=true
        # Run every Sunday at 9 AM
        - swarm.cronjob.schedule=0 0 9 * * 0
        - swarm.cronjob.skip-running=true
      placement:
        constraints:
          - node.role == manager

  # Alternative: Custom update checker with more detailed reporting
  diun:
    image: crazymax/diun:latest
    environment:
      TZ: "Australia/Adelaide"
      LOG_LEVEL: "info"
      LOG_JSON: "false"
      DIUN_WATCH_WORKERS: "20"
      DIUN_WATCH_SCHEDULE: "0 9 * * 0"  # Sunday 9 AM
      DIUN_WATCH_JITTER: "30s"
      # Providers
      DIUN_PROVIDERS_SWARM: "true"
      DIUN_PROVIDERS_SWARM_WATCHBYDEFAULT: "false"
      # Notifications - Microsoft Teams Webhook
      DIUN_NOTIF_WEBHOOK_ENDPOINT: "${WEBHOOK_URL}"
      DIUN_NOTIF_WEBHOOK_METHOD: "POST"
      DIUN_NOTIF_WEBHOOK_HEADERS_CONTENT-TYPE: "application/json"
      DIUN_NOTIF_WEBHOOK_TEMPLATEBODY: |
        {
          "@type": "MessageCard",
          "@context": "http://schema.org/extensions",
          "themeColor": "0076D7",
          "summary": "Docker Update Available",
          "sections": [{
            "activityTitle": "ÔøΩ Docker Update Available",
            "activitySubtitle": "{{.Entry.Image.Domain}}/{{.Entry.Image.Path}}",
            "activityImage": "https://www.docker.com/wp-content/uploads/2022/03/vertical-logo-monochromatic.png",
            "facts": [{
              "name": "üì¶ Service",
              "value": "{{.Entry.Image.Path}}"
            }, {
              "name": "üè∑Ô∏è Current Version",
              "value": "{{.Entry.Image.Tag}}"
            }, {
              "name": "üÜï Latest Version",
              "value": "{{.Entry.Manifest.Tag}}"
            }, {
              "name": "üïê Release Date",
              "value": "{{.Entry.Image.Created | date \"2006-01-02 15:04:05\"}}"
            }],
            "markdown": true
          }],
          "potentialAction": [{
            "@type": "OpenUri",
            "name": "View on Docker Hub",
            "targets": [{
              "os": "default",
              "uri": "https://hub.docker.com/r/{{.Entry.Image.Path}}"
            }]
          }]
        }
      # Email notifications
      DIUN_NOTIF_MAIL_HOST: "${SMTP_HOST}"
      DIUN_NOTIF_MAIL_PORT: "${SMTP_PORT}"
      DIUN_NOTIF_MAIL_SSL: "true"
      DIUN_NOTIF_MAIL_USERNAME: "${SMTP_USER}"
      DIUN_NOTIF_MAIL_PASSWORD: "${SMTP_PASS}"
      DIUN_NOTIF_MAIL_FROM: "${EMAIL_FROM}"
      DIUN_NOTIF_MAIL_TO: "${EMAIL_TO}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - diun-data:/data
    networks:
      - dokploy-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Cron scheduler for the update checker
  scheduler:
    image: crazymax/swarm-cronjob:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - "TZ=Australia/Adelaide"
      - "LOG_LEVEL=info"
      - "LOG_JSON=false"
    networks:
      - dokploy-network
    deploy:
      placement:
        constraints:
          - node.role == manager

volumes:
  diun-data:

networks:
  dokploy-network:
    external: true
